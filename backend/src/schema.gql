# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface BaseResponse {
  message: String!
  statusCode: HttpCode!
}

input CreateQuestManagerInput {
  password: String!
  username: String!
}

type CreateQuestManagerMutation {
  username: String!
}

type CreateQuestManagerMutation_Mutation implements BaseResponse {
  data: CreateQuestManagerMutation!
  message: String!
  statusCode: HttpCode!
}

type ErrorOutput implements BaseResponse {
  errors: JSON!
  message: String!
  statusCode: HttpCode!
}

input FilterQuestManagerInput {
  name: String!
}

enum HttpCode {
  ACCEPTED
  ALREADY_REPORTED
  AMBIGUOUS
  BAD_GATEWAY
  BAD_REQUEST
  CONFLICT
  CONTENT_DIFFERENT
  CONTINUE
  CREATED
  EARLYHINTS
  EXPECTATION_FAILED
  FAILED_DEPENDENCY
  FORBIDDEN
  FOUND
  GATEWAY_TIMEOUT
  GONE
  HTTP_VERSION_NOT_SUPPORTED
  INSUFFICIENT_STORAGE
  INTERNAL_SERVER_ERROR
  I_AM_A_TEAPOT
  LENGTH_REQUIRED
  LOCKED
  LOOP_DETECTED
  METHOD_NOT_ALLOWED
  MISDIRECTED
  MOVED_PERMANENTLY
  MULTI_STATUS
  NON_AUTHORITATIVE_INFORMATION
  NOT_ACCEPTABLE
  NOT_FOUND
  NOT_IMPLEMENTED
  NOT_MODIFIED
  NO_CONTENT
  OK
  PARTIAL_CONTENT
  PAYLOAD_TOO_LARGE
  PAYMENT_REQUIRED
  PERMANENT_REDIRECT
  PRECONDITION_FAILED
  PRECONDITION_REQUIRED
  PROCESSING
  PROXY_AUTHENTICATION_REQUIRED
  REQUESTED_RANGE_NOT_SATISFIABLE
  REQUEST_TIMEOUT
  RESET_CONTENT
  SEE_OTHER
  SERVICE_UNAVAILABLE
  SWITCHING_PROTOCOLS
  TEMPORARY_REDIRECT
  TOO_MANY_REQUESTS
  UNAUTHORIZED
  UNPROCESSABLE_ENTITY
  UNRECOVERABLE_ERROR
  UNSUPPORTED_MEDIA_TYPE
  URI_TOO_LONG
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input LoginQuestManagerInput {
  password: String!
  username: String!
}

type LoginQuestManagerMutation {
  role: String!
  token: String!
}

type LoginQuestManagerMutation_Mutation implements BaseResponse {
  data: LoginQuestManagerMutation!
  message: String!
  statusCode: HttpCode!
}

type Mutation {
  createQuestManager(input: CreateQuestManagerInput!): ResultUnion_CreateQuestManagerMutation_Mutation!
  loginQuestManager(input: LoginQuestManagerInput!): ResultUnion_LoginQuestManagerMutation_Mutation!
}

type PaginationData {
  cursorLeft: Float
  cursorRight: Float
  page: Float!
  pageSize: Float!
  total: Float!
}

input PaginationInput {
  page: Float! = 1
  pageSize: Float! = 10
}

type Query {
  questManagers(filter: FilterQuestManagerInput, pagination: PaginationInput): ResultUnion_QuestManagerSchema_List!
}

type QuestManagerSchema {
  username: String!
}

type QuestManagerSchema_List implements BaseResponse {
  data: [QuestManagerSchema!]!
  message: String!
  pagination: PaginationData!
  statusCode: HttpCode!
}

union ResultUnion_CreateQuestManagerMutation_Mutation = CreateQuestManagerMutation_Mutation | ErrorOutput

union ResultUnion_LoginQuestManagerMutation_Mutation = ErrorOutput | LoginQuestManagerMutation_Mutation

union ResultUnion_QuestManagerSchema_List = ErrorOutput | QuestManagerSchema_List